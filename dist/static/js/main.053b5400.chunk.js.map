{"version":3,"sources":["component/layout/SignedinLinks.js","store/actions/authActions.js","component/layout/SignedoutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Dashboard.js","component/projects/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","store/actions/projectActions.js","component/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","signOut","dispatch","getState","getFirebase","auth","then","type","catch","err","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","uid","SignedoutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstname","authorLastname","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","console","log","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","SignUp","firstname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","isLoaded","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","middleware","thunk","withExtraArgument","store","createStore","applyMiddleware","reduxFirestore","rrfProps","config","attachAuthIsReady","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.053b5400.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedinLinks = (props) => {\n    return(\n        <ul className='right'>\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Sign Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink ligthen-1'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\n\nexport default connect(null, { signOut })(SignedinLinks);","export const signIn = (credentials) => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password,\n        ).then(()=>{\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    };\n};\n\nexport const signOut = () => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(()=>{\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'SIGNOUT_ERROR', err });\n        });\n    };\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstname: newUser.firstname,\n                lastname: newUser.lastname,\n                initials: newUser.firstname[0]+newUser.lastname[0]\n            });\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err });\n        });\n    }\n};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className='right'>\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\n\nexport default SignedOutLinks;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport SignedinLinks from \"../layout/SignedinLinks\";\nimport SignedoutLinks from \"../layout/SignedoutLinks\";\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n\n    return(\n        <nav className='nav-wrapper grey darken-3'>\n            <div className='container'>  \n                <Link to='/' className='brand-logo'>MarioPlan</Link>\n                { auth.uid && <SignedinLinks profile={profile}/> }\n                { !auth.uid && <SignedoutLinks /> }\n            </div>\n        </nav>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\nimport moment from 'moment';\n\nconst Notifications = ({ notifications }) => {\n    return(\n        <div className='section'>\n            <div className='card z-depth-0'>\n                <div className='card-content'>\n                    <span className='card-title'>Notifications</span>\n                    <ul className='notifications'>\n                        {\n                            notifications && notifications.map(item => {\n                                return(\n                                    <li key={item.id}>\n                                        <span className='pink-text'>{item.user} </span>\n                                        <span>{item.content}</span>\n                                        <div className='grey-text'> {moment(item.time.toDate()).fromNow()}</div>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({project}) => {\n    return(\n        <div className='card z-depth-0 project-summary'>\n            <div className='card-content grey-text text-darken-3'>\n                <span className='card-title'>{project.title}</span>\n                <p>Posted by {project.authorFirstname} {project.authorLastname}</p>\n                <p className='grey-text'>{moment(project.createdAt.toDate().toString()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className='project-list section'>\n            { projects && projects.map(project => {\n                return( \n                    <Link to = {`/project/${project.id}`} key={project.id}>\n                        <ProjectSummary project={project}/> \n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\n\n\nclass Dashboard extends Component {\n    render(){\n        const { projects, auth, notifications } = this.props;\n        if(!auth.uid){ return (<Redirect to='/signin'/>)};\n\n        return(\n            <div className='dashboard container'>\n                <div className='row'>\n                    <div className='s12 m6 col'>\n                        <ProjectList projects = {projects}/>\n                    </div>\n                    <div className='s12 m5 offset-m1 col'>\n                        <Notifications notifications = {notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        notifications: state.firestore.ordered.notifications,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, null),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard);","import React from 'react'\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nfunction ProjectDetails(props) { \n    const project = props.project;\n\n    if(!props.auth.uid){ return (<Redirect to='/signin'/>); }\n\n    return (\n        <div>\n            { project && <div className='container section project-details'>\n                <div className='card z-depth-0'>\n                    <div className='card-content'>\n                        <span className='card-title'>{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className='card-action grey lighten-4 grey-text'>\n                        <div>Posted by {project.authorFirstname} {project.authorLastname}</div>\n                        <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n                    </div>\n                </div>\n            </div> }\n            { !project && <div><p className='center'>Loading project...</p></div> }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = (projects) ? projects[id] : null;\n\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps), \n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signIn } from \"../../store/actions/authActions\";\n\nclass SignIn extends Component{\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state);\n    }\n\n\n    render(){\n        const { authError, auth } = this.props;\n        if(auth.uid){ return (<Redirect to='/'/>)};\n\n        return(\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <h5 className='grey-text text-darken-3'>Sign In</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input onChange={this.handleChange} type='email' id='email'/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='password'>Password</label>\n                        <input onChange={this.handleChange} type='password' id='password'/>\n                    </div>\n                    <div className='input-field'>\n                        <button className='btn pink lighten-1 z-depth-0'>Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nexport default connect(mapStateToProps, { signIn })(SignIn);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component{\n    state = {\n        email: '',\n        password: '',\n        firstname: '',\n        lastname: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state);\n    }\n\n\n    render(){\n        const { auth, authError } = this.props;\n        if(auth.uid){ return (<Redirect to='/'/>)};\n\n        return(\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <h5 className='grey-text text-darken-3'>Sign Up</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input onChange={this.handleChange} type='email' id='email'/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='password'>Password</label>\n                        <input onChange={this.handleChange} type='password' id='password'/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='firstname'>Firstname</label>\n                        <input onChange={this.handleChange} type='text' id='firstname'/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='lastname'>Lastname</label>\n                        <input onChange={this.handleChange} type='text' id='lastname'/>\n                    </div>\n                    <div className='input-field'>\n                        <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\n\nfunction mapStateToProps(state){\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nexport default connect(mapStateToProps, { signUp })(SignUp);","export const createProject = (project) => {\n    return(dispatch, getState, {getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorId: authorId,\n            authorFirstname: profile.firstname,\n            authorLastname: profile.lastname,\n            createdAt: new Date()\n        }).then(()=>{\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        });\n    };\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { createProject } from \"../../store/actions/projectActions\";\n\n\nclass CreateProject extends Component{\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n\n\n    render(){\n        const { auth } = this.props;\n        if(!auth.uid){ return (<Redirect to='/signin'/>)};\n\n        return(\n            <div className='container'>\n                <form onSubmit={this.handleSubmit} className='white'>\n                    <h5 className='grey-text text-darken-3'>Create New Project</h5>\n                    <div className='input-field'>\n                        <label htmlFor='title'>Title</label>\n                        <input onChange={this.handleChange} type='text' id='title'/>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='content'>Project Content</label>\n                        <textarea className='materialize-textarea' onChange={this.handleChange} id='content'></textarea>\n                    </div>\n                    <div className='input-field'>\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    \n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from './component/layout/Navbar';\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport ProjectDetails from './component/projects/ProjectDetails';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport CreateProject from './component/projects/CreateProject';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t{ props.isLoaded && <div className=\"App\">\n\t\t\t\t<Navbar/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={Dashboard}/>\n\t\t\t\t\t<Route path='/project/:id' component={ProjectDetails}/>\n\t\t\t\t\t<Route path='/signin' component={SignIn}/>\n\t\t\t\t\t<Route path='/signup' component={SignUp}/>\n\t\t\t\t\t<Route path='/create' component={CreateProject}/>\n\t\t\t\t</Switch>\n\t\t\t</div> }\n\t\t\t{ !props.isLoaded && <div><p className='center'>Loading...</p></div>}\n\t\t</BrowserRouter>\n\t);\n}\n\nfunction mapStateToProps(state){\n\tconsole.log(state);\n\treturn {\n\t\tisLoaded: state.firebase.auth.isLoaded\n\t}\n}\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    if(action.type === 'LOGIN_ERROR'){\n        console.log(action.err);\n        return { ...state, authError: 'Login failed' };\n    }else if (action.type === 'LOGIN_SUCCESS'){\n        return { ...state, authError: null };\n    }else if(action.type === 'SIGNOUT_SUCCESS'){\n        console.log('Sign out sucess');\n        return { ...state };\n    }else if (action.type === 'SIGNOUT_ERROR'){\n        return { ...state };\n    }else if(action.type === 'SIGNUP_SUCCESS'){\n        console.log('Sign up sucess');\n        return { ...state, authError: null };\n    }else if (action.type === 'SIGNUP_ERROR'){\n        console.log('Sign up error');\n        return { ...state, authError: action.err.message };\n    }\n    return { ...state };\n};\n\nexport default authReducer;","const initialState = {\n    projects: [\n        { id: 1, title: 'just a title', content: 'blah blas the nthsfv obasd' },\n        { id: 2, title: 'just a title', content: 'blah blas the nthsfv obasd' },\n        { id: 3, title: 'just a title', content: 'blah blas the nthsfv obasd' },\n    ]\n};\n\nconst projectReducer = (state = initialState, action) => {\n    switch (action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return { ...state };\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return { ...state };\n        default:\n            return { ...state };\n    }\n}\n\nexport default projectReducer;","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n        auth: authReducer,\n        project: projectReducer,\n        firestore: firestoreReducer,\n        firebase: firebaseReducer\n    }); \n\nexport default rootReducer;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyA9ZyTfvPPLAjmExh15kbFm69E2cXgdycc\",\n    authDomain: \"ayobami-marioplan.firebaseapp.com\",\n    databaseURL: \"https://ayobami-marioplan.firebaseio.com\",\n    projectId: \"ayobami-marioplan\",\n    storageBucket: \"\",\n    messagingSenderId: \"419040943729\",\n    appId: \"1:419040943729:web:ecd5149d411e3daf9805d0\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n// firebase.firestore().settings({ timestampsInSnapshots: true });\n\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { getFirestore, createFirestoreInstance, reduxFirestore } from \"redux-firestore\";\nimport { getFirebase, ReactReduxFirebaseProvider } from \"react-redux-firebase\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport firebase from \"./config/fbConfig\";\n\n\n// react-redux-firebase config\nconst rrfConfig = {\n    attachAuthIsReady: true,\n    userProfile: 'users',\n    useFirestoreForProfile: true\n};\n\nconst middleware = [\n    thunk.withExtraArgument({ getFirestore, getFirebase })\n    // This is where you add other middleware like redux-observable\n];\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(...middleware),\n    reduxFirestore(firebase) // redux bindings for firestore\n));\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider\n            { ...rrfProps }\n        >\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}